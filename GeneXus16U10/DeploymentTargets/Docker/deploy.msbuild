<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Deploy"  ToolsVersion="4.0">

	<Import Project="..\..\MSBuild.Community.Tasks.Targets"/>
	
	<Target Name="CreateDockerfile">

		<ItemGroup>
			<SourceFile Include="$(DeploySource)" />
		</ItemGroup>

		<Error Text="DeploySource cannot be empty" Condition="'$(DeploySource)' == ''"/>

		<Error Text="DeploySource must be a .war file" Condition="'$(GENERATOR)' == 'Java' AND '%(SourceFile.Extension)' != '.war'" />
		<Error Text="DeploySource must be a .zip file" Condition="('$(GENERATOR)' == 'C#' OR '$(GENERATOR)' == '.NET Core') AND '%(SourceFile.Extension)' != '.zip'"/>
		
		<PropertyGroup>
			<DeployDirectory>%(SourceFile.RootDir)%(SourceFile.Directory)</DeployDirectory>
			<Dockerfile>$(DeployDirectory)Dockerfile</Dockerfile>
		</PropertyGroup>

		<Message Text="$(DeployDirectory)"/>
		
		<!-- Java -->
		<PropertyGroup Condition="'$(GENERATOR)' == 'Java'">
			<WarName Condition=" '$(WarName)' == ''">ROOT</WarName>
			<Extension>.war</Extension>
			<DockerSource>$(WarName)$(Extension)</DockerSource>
			<DockerSourceFullPath>$(DeployDirectory)$(DockerSource)</DockerSourceFullPath>
			<DeployCommand>ADD</DeployCommand>
		</PropertyGroup>

		<!-- C# or .NET Core -->
		<PropertyGroup Condition="'$(GENERATOR)' == 'C#' OR '$(GENERATOR)' == '.NET Core'">
			<DeployCommand>COPY</DeployCommand>
			<TempDir>$(DeployDirectory)temp</TempDir>
			<DockerSource>temp/</DockerSource>
		</PropertyGroup>

		<Copy SourceFiles="$(DeploySource)" DestinationFiles="$(DockerSourceFullPath)" Condition="'$(GENERATOR)' == 'Java'" />
		
		<ItemGroup>
			<Line Include="# Dockerfile generated by GeneXus ($(GENERATOR))"/>
			<Line Include="FROM $(DOCKER_BASE_IMAGE)"/>
			<Line Include="LABEL maintainer=&quot;$(DOCKER_MAINTAINER)&quot;" Condition="'$(DOCKER_MAINTAINER)' != ''" />
			<Line Include="ENV $(DOCKER_ENVVARS)" Condition="'$(DOCKER_ENVVARS)' != ''" />
			<Line Include="WORKDIR $(DOCKER_WEBAPPLOCATION)" />
			<Line Include="RUN [ -d ROOT/ ] &amp;&amp; mv ROOT/ ROOT.old/ || true"  Condition="'$(GENERATOR)' == 'Java'" />
			<Line Include="$(DeployCommand) [&quot;$(DockerSource)&quot;, &quot;$(DOCKER_WEBAPPLOCATION)&quot;]"  />
			<Line Include="ENTRYPOINT [&quot;dotnet&quot;, &quot;bin/GxNetCoreStartup.dll&quot;]"  Condition="'$(GENERATOR)' == '.NET Core'" />
		</ItemGroup>

		<WriteLinesToFile File="$(Dockerfile)" Lines="@(Line)" Overwrite="true" />
	</Target>

	<Target Name="ExtractZip" Condition="'$(GENERATOR)' == '.NET Core' OR '$(GENERATOR)' == 'C#'">

		<RemoveDir Directories="$(TempDir)"/>
		<Unzip ZipFileName="$(DeploySource)" TargetDirectory="$(TempDir)"/>
		
	</Target>
	
	<Target Name="Deploy" DependsOnTargets="DeployDocker"/>

	<Target Name="DeployDocker" DependsOnTargets="CreateDockerfile;ExtractZip">
		<Exec Command="docker info --format &quot;{{.OSType}}&quot;" ConsoleToMSBuild="true" ContinueOnError="true">
			<Output TaskParameter="ConsoleOutput" PropertyName="DOCKER_OS" />
			<Output TaskParameter="ExitCode" PropertyName="DOCKER_EXIT_CODE"/>
		</Exec>

		<Error Text="You need to change your Docker Engine to work with Linux containers" Condition="('$(GENERATOR)' == '.NET Core' OR '$(GENERATOR)' == 'Java') AND '$(DOCKER_OS)' == 'windows'"/>
		<Error Text="You need to change your Docker Engine to work with Windows containers" Condition="'$(GENERATOR)' == 'C#' AND '$(DOCKER_OS)' == 'linux'"/>		
		
		<PropertyGroup>
			<UnslashedDeployDirectory>$([System.Text.RegularExpressions.Regex]::Replace ($(DeployDirectory), `\\$`, ""))</UnslashedDeployDirectory>
		</PropertyGroup>

		<Exec Command='docker build --pull --no-cache -t $(DOCKER_IMAGE_NAME) -f "$(Dockerfile)" "$(UnslashedDeployDirectory)"' Condition="'$(DOCKER_EXIT_CODE)' == '0'" />
		<Warning Text="Dockerfile successfully created but no docker image was generated because Docker client was not found." Condition="'$(DOCKER_EXIT_CODE)' == '9009'"/>
		
	</Target>
</Project>
