apply plugin: 'com.android.application'

android {
	compileSdkVersion android_build.compile_sdk

	defaultConfig {
		applicationId "$Main.AndroidPackageName$"
		versionCode $Main.AndroidVersionCode$
		versionName "$Main.AndroidVersionName$"
		minSdkVersion android_build.min_sdk
		targetSdkVersion android_build.target_sdk

$if(Main.MultiDexBuild)$
		multiDexEnabled true
		multiDexKeepFile file('multidex-config.txt')
$endif$
$if(Main.HasAssociatedUITests)$
		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
$endif$
	}

	signingConfigs {
		release {
			storeFile file(String.valueOf(System.getenv("KEYSTORE_FILE")))
			storePassword System.getenv("KEYSTORE_PASSWORD")
			keyAlias System.getenv("KEY_ALIAS")
			keyPassword System.getenv("KEY_PASSWORD")
		}
	}

	buildTypes {
$if(Main.ObfuscateApplication)$
		all {
			minifyEnabled true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
$endif$
		release {
			signingConfig signingConfigs.release
		}
	}

	compileOptions {
		sourceCompatibility android_build.java_version
		targetCompatibility android_build.java_version
	}

	dexOptions {
		jumboMode = true
	}

	packagingOptions {
		exclude 'META-INF/proguard/androidx-annotations.pro'
	}
}

dependencies {
	$Main.AndroidLibraryModules: { module | $module.DependencyType$ '$module.Data.GroupId$:$module.Data.Name$:$module.Version$'}; separator="\r\n"$
	implementation fileTree(dir: 'libs', include: ['*.jar'])
	$if(Main.UsePdfReports)$
	implementation ('com.genexus:gxandroidreports:$Main.AndroidReportsVersion$') 	{
		exclude group: 'com.genexus', module: 'gxandroid'
		exclude group: 'stax', module: 'stax-api'
	}
	$endif$
	$if(Main.MultiDexBuild)$
	implementation "androidx.multidex:multidex:2.0.1"
	$endif$
}

$Main.AndroidLibraryModules: { module |$if(module.Data.GradleExtensionFile)$apply from: rootProject.file('$Main.QualifiedPath$/$module.Data.GradleExtensionFile$') $endif$}; separator="\r\n"$
